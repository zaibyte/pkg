/*
 * Copyright (c) 2020. Temple3x (temple3x@gmail.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// xlogtest implements functions to generate temporary loggers.
package xlogtest

import (
	"io/ioutil"
	"os"
	"path/filepath"

	"github.com/zaibyte/pkg/config"
	"github.com/zaibyte/pkg/xlog"
)

var (
	logDir  = ""
	logName = "error.log"

	el *xlog.ErrorLogger
)

// New creates xlog.ErrorLogger
// and init global logger.
//
// Log files will be placed in logDir which is in the $TMPDIR.
// The directory name is generated by taking pattern and applying a
// random string to the end.
func New(pattern string) *xlog.ErrorLogger {
	config.Adjust(&pattern, "xlog-test")
	var err error
	logDir, err = ioutil.TempDir(os.TempDir(), pattern)

	if err != nil {
		panic(err)
	}

	cfg := &xlog.Config{
		Output: filepath.Join(logDir, logName),
		Level:  "",
		Rotate: xlog.RotateConfig{},
	}

	el, err = cfg.MakeLogger("test")
	if err != nil {
		panic(err)
	}
	return el
}

// Sync syncs loggers.
func Sync() {
	el.Sync()
}

// Clean cleans up loggers directory.
func Clean() {
	el.Close()
	os.RemoveAll(logDir)
}
